name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-linux
            zigup_name: zigup-linux
            installer_name: zigup-installer-linux
          - os: macos-latest
            target: x86_64-macos
            zigup_name: zigup-macos
            installer_name: zigup-installer-macos
          - os: macos-latest
            target: aarch64-macos
            zigup_name: zigup-macos-arm64
            installer_name: zigup-installer-macos-arm64
          - os: windows-latest
            target: x86_64-windows
            zigup_name: zigup.exe
            installer_name: zigup-installer.exe

    steps:
    - uses: actions/checkout@v4

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v2
      with:
        version: 0.14.1

    - name: Get dependencies
      run: zig build --fetch

    - name: Build zigup
      run: zig build -Doptimize=ReleaseFast -Dtarget=${{ matrix.target }}

    - name: Rename binaries
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cp zig-out/bin/zigup.exe ${{ matrix.zigup_name }}
          cp zig-out/bin/zigup-installer.exe ${{ matrix.installer_name }}
        else
          cp zig-out/bin/zigup ${{ matrix.zigup_name }}
          cp zig-out/bin/zigup-installer ${{ matrix.installer_name }}
        fi

    - name: Upload zigup binary
      uses: actions/upload-artifact@v4
      with:
        name: zigup-${{ matrix.target }}
        path: ${{ matrix.zigup_name }}

    - name: Upload installer binary
      uses: actions/upload-artifact@v4
      with:
        name: installer-${{ matrix.target }}
        path: ${{ matrix.installer_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Get version from tag
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Check if this is a release version
      id: is_release
      run: |
        if [[ "${{ steps.version.outputs.version }}" == *"-dev"* ]]; then
          echo "is_release=false" >> $GITHUB_OUTPUT
          echo "prerelease=true" >> $GITHUB_OUTPUT
        else
          echo "is_release=true" >> $GITHUB_OUTPUT
          echo "prerelease=false" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ZigUp ${{ steps.version.outputs.version }}
        draft: false
        prerelease: ${{ steps.is_release.outputs.prerelease }}
        body: |
          ## ZigUp ${{ steps.version.outputs.version }}
          
          ### Installation
          
          **Quick Install (Recommended):**
          Download and run the installer for your platform:
          
          - **Windows**: `zigup-installer.exe`
          - **Linux**: `zigup-installer-linux` 
          - **macOS (Intel)**: `zigup-installer-macos`
          - **macOS (Apple Silicon)**: `zigup-installer-macos-arm64`
          
          The installer will download the latest zigup binary and set up your PATH automatically.
          
          **Manual Install:**
          Download the zigup binary directly and add it to your PATH manually:
          
          - **Windows**: `zigup.exe`
          - **Linux**: `zigup-linux`
          - **macOS (Intel)**: `zigup-macos` 
          - **macOS (Apple Silicon)**: `zigup-macos-arm64`

    # Upload zigup binaries
    - name: Upload zigup-linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./zigup-x86_64-linux/zigup-linux
        asset_name: zigup-linux
        asset_content_type: application/octet-stream

    - name: Upload zigup-macos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./zigup-x86_64-macos/zigup-macos
        asset_name: zigup-macos
        asset_content_type: application/octet-stream

    - name: Upload zigup-macos-arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./zigup-aarch64-macos/zigup-macos-arm64
        asset_name: zigup-macos-arm64
        asset_content_type: application/octet-stream

    - name: Upload zigup.exe
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./zigup-x86_64-windows/zigup.exe
        asset_name: zigup.exe
        asset_content_type: application/octet-stream

    # Upload installer binaries
    - name: Upload zigup-installer-linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./installer-x86_64-linux/zigup-installer-linux
        asset_name: zigup-installer-linux
        asset_content_type: application/octet-stream

    - name: Upload zigup-installer-macos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./installer-x86_64-macos/zigup-installer-macos
        asset_name: zigup-installer-macos
        asset_content_type: application/octet-stream

    - name: Upload zigup-installer-macos-arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./installer-aarch64-macos/zigup-installer-macos-arm64
        asset_name: zigup-installer-macos-arm64
        asset_content_type: application/octet-stream

    - name: Upload zigup-installer.exe
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./installer-x86_64-windows/zigup-installer.exe
        asset_name: zigup-installer.exe
        asset_content_type: application/octet-stream